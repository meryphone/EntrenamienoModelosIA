library(gridExtra)
myhist=ggplot(data=credit, aes(x = V3)) +
geom_histogram(col = "orange", fill = "orange", alpha = 0.2,
breaks = seq(0, 30, by = 1)) +
labs(title = "Histograma para el análisis de la variable V3", y = "Count")
# Marca el valor de la media con una línea azul vertical
myhist <- myhist + geom_vline(xintercept = mean(credit$V3),
col = "blue", linetype = "dashed", size = 1)
# Marca el valor de la mediana con una línea roja vertical
myhist <- myhist + geom_vline(xintercept = median(credit$V3),
col = "red", linetype = "dashed", size = 1)
myhist
myhist=ggplot(data=credit, aes(x = V3)) +
geom_histogram(col = "orange", fill = "orange", alpha = 0.2,
breaks = seq(0, 30, by = 0.5)) +
labs(title = "Histograma para el análisis de la variable V3", y = "Count")
# Marca el valor de la media con una línea azul vertical
myhist <- myhist + geom_vline(xintercept = mean(credit$V3),
col = "blue", linetype = "dashed", size = 1)
# Marca el valor de la mediana con una línea roja vertical
myhist <- myhist + geom_vline(xintercept = median(credit$V3),
col = "red", linetype = "dashed", size = 1)
myhist
library(ggplot2)
myhist = ggplot(data=credit, aes(x = V8)) +
geom_histogram(col="orange", fill="orange", alpha=0.2,
breaks=seq(0, 30, by=1)) +
labs(title="Histograma para el análisis de la variable V8", y="Count")
# Marca el valor de la media con una línea azul vertical
myhist = myhist + geom_vline(xintercept = mean(credit$V8),
col="blue", linetype="dashed", size=1)
# Marca el valor de la mediana con una línea roja vertical
myhist = myhist + geom_vline(xintercept = median(credit$V8),
col="red", linetype="dashed", size=1)
library(gridExtra)
ggplot(data=credit,aes(x=v8)) +
ggtitle("QQ plot para variable v8") +
geom_qq() +
stat_qq_line() +
xlab("Distribución teórica") + ylab("Distribución muestral")
library(ggplot2)
myhist = ggplot(data=credit, aes(x = V8)) +
geom_histogram(col="orange", fill="orange", alpha=0.2,
breaks=seq(0, 30, by=1)) +
labs(title="Histograma para el análisis de la variable V8", y="Count")
# Marca el valor de la media con una línea azul vertical
myhist = myhist + geom_vline(xintercept = mean(credit$V8),
col="blue", linetype="dashed", size=1)
# Marca el valor de la mediana con una línea roja vertical
myhist = myhist + geom_vline(xintercept = median(credit$V8),
col="red", linetype="dashed", size=1)
ggplot(data=credit,aes(x=v8)) +
ggtitle("QQ plot para variable v8") +
stat_qq_line() +
xlab("Distribución teórica") + ylab("Distribución muestral")
library(ggplot2)
myhist = ggplot(data=credit, aes(x = V8)) +
geom_histogram(col="orange", fill="orange", alpha=0.2,
breaks=seq(0, 30, by=1)) +
labs(title="Histograma para el análisis de la variable V8", y="Count")
# Marca el valor de la media con una línea azul vertical
myhist = myhist + geom_vline(xintercept = mean(credit$V8),
col="blue", linetype="dashed", size=1)
# Marca el valor de la mediana con una línea roja vertical
myhist = myhist + geom_vline(xintercept = median(credit$V8),
col="red", linetype="dashed", size=1)
ggplot(data=credit,aes(x=V8)) +
ggtitle("QQ plot para variable v8") +
stat_qq_line() +
xlab("Distribución teórica") + ylab("Distribución muestral")
library(ggplot2)
myhist = ggplot(data=credit, aes(x = V8)) +
geom_histogram(col="orange", fill="orange", alpha=0.2,
breaks=seq(0, 30, by=1)) +
labs(title="Histograma para el análisis de la variable V8", y="Count")
# Marca el valor de la media con una línea azul vertical
myhist = myhist + geom_vline(xintercept = mean(credit$V8),
col="blue", linetype="dashed", size=1)
# Marca el valor de la mediana con una línea roja vertical
myhist = myhist + geom_vline(xintercept = median(credit$V8),
col="red", linetype="dashed", size=1)
ggplot(data = credit, aes(sample = V8)) +
ggtitle("QQ plot para variable V8") +
stat_qq() +
stat_qq_line() +
xlab("Distribución teórica") +
ylab("Distribución muestral")
# Mostrar el histograma
myhist
ggplot(data = credit, aes(sample = V8)) +
ggtitle("QQ plot para variable V8") +
stat_qq() +
stat_qq_line() +
xlab("Distribución teórica") +
ylab("Distribución muestral")
summary(credit$V8)
boxplot(credit$V8)
boxplot(credit$V8,plot=FALSE)
summary(credit$V8)
summary(credit)
quartile
quantile(credit$V8)
knitr::opts_chunk$set(echo = TRUE)
Q1=quantile(credit$V2,0.25)
Q3=quantile(credit$V2,0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
Q1=quantile(credit$V2,0.25)
Q3=quantile(credit$V2,0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
print(paste("El límite inferior =", limiteInferior))
print(paste("El límite superior =", limiteSuperior))
boxplot(credit$V8)
boxplot(credit$V2)
boxplot(credit$V2,plot=false)
boxplot(credit$V2,plot=FALSE)
Q1=quantile(credit$V2,0.25)
Q3=quantile(credit$V2,0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
print(paste("El límite inferior =", limiteInferior))
print(paste("El límite superior =", limiteSuperior))
credit = read.table("crx.data", sep = ",", na.strings ="?")
credit.trainIdx<-readRDS("credit.trainIdx")
#credit.Datos.Train<-credit[credit.trainIdx,]
#credit.Datos.Test<-credit[-credit.trainIdx,]
credit = na.omit(credit)
credit["V1"] = lapply(credit["V1"], FUN = as.factor)
credit["V2"] = lapply(credit["V2"], FUN = as.numeric)
credit["V3"] = lapply(credit["V3"], FUN = as.numeric)
credit["V4"] = lapply(credit["V4"], FUN = as.factor)
credit["V5"] = lapply(credit["V5"], FUN = as.factor)
credit["V6"] = lapply(credit["V6"], FUN = as.factor)
credit["V7"] = lapply(credit["V7"], FUN = as.factor)
credit["V8"] = lapply(credit["V8"], FUN = as.numeric)
credit["V9"] = lapply(credit["V9"], FUN = as.factor)
credit["V10"] = lapply(credit["V10"], FUN = as.factor)
credit["V11"] = lapply(credit["V11"], FUN = as.numeric)
credit["V12"] = lapply(credit["V12"], FUN = as.factor)
credit["V13"] = lapply(credit["V13"], FUN = as.factor)
credit["V14"] = lapply(credit["V14"], FUN = as.numeric)
credit["V15"] = lapply(credit["V15"], FUN = as.numeric)
credit["V16"] = lapply(credit["V16"], FUN = as.factor)
str(credit)
levels(credit$V4)<-c(levels(credit$V4),"t")
str(credit$V4)
str(credit)
summary(credit)
str(credit)
summary(credit$V2)
library(ggplot2)
myhist = ggplot(data=credit,aes(V2)) +
geom_histogram(col="orange",fill="orange",alpha=0.2) +
labs(title="Histograma para V2", y="Count")
myhist = myhist + geom_vline(xintercept = mean(credit$V2),
col="blue",linetype="dashed")
myhist = myhist + geom_vline(xintercept = median(credit$V2),
col="red",linetype="dashed")
myhist
myplot = ggplot(data=credit,aes(sample=V2)) +
ggtitle("QQ plot para V2") +
geom_qq() +
stat_qq_line() +
xlab("Distribución teórica") + ylab("Distribución muestral")
myplot
myhist=ggplot(data=credit, aes(x = V3)) +
geom_histogram(col = "orange", fill = "orange", alpha = 0.2,
breaks = seq(0, 30, by = 1)) +
labs(title = "Histograma para el análisis de la variable V3", y = "Count")
# Marca el valor de la media con una línea azul vertical
myhist <- myhist + geom_vline(xintercept = mean(credit$V3),
col = "blue", linetype = "dashed")
# Marca el valor de la mediana con una línea roja vertical
myhist <- myhist + geom_vline(xintercept = median(credit$V3),
col = "red", linetype = "dashed")
myhist
ggplot(credit, aes(sample = V3)) +
stat_qq() +
stat_qq_line(color = "blue", linetype = "dashed") +
labs(title = "Diagrama Q-Q de V3", x = "Cuantiles Teóricos", y = "Cuantiles Muestrales")
summary(credit$V8)
myhist = ggplot(data=credit, aes(x = V8)) +
geom_histogram(col="orange", fill="orange", alpha=0.2,
breaks=seq(0, 30, by=1)) +
labs(title="Histograma para el análisis de la variable V8", y="Count")
# Marca el valor de la media con una línea azul vertical
myhist = myhist + geom_vline(xintercept = mean(credit$V8),
col="blue", linetype="dashed")
# Marca el valor de la mediana con una línea roja vertical
myhist = myhist + geom_vline(xintercept = median(credit$V8),
col="red", linetype="dashed")
# Mostrar el histograma
myhist
ggplot(data = credit, aes(sample = V8)) +
ggtitle("QQ plot para variable V8") +
stat_qq() +
stat_qq_line() +
xlab("Distribución teórica") +
ylab("Distribución muestral")
Q1=quantile(credit$V2,0.25)
Q3=quantile(credit$V2,0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
print(paste("El límite inferior =", limiteInferior))
print(paste("El límite superior =", limiteSuperior))
box_stats <- boxplot.stats(credit$V2)
print(box_stats$stats)
min(credit$V2)
summary(credit)
3
Q1=quantile(credit$V2,0.25)
Q3=quantile(credit$V2,0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
print(paste("El límite inferior =", limiteInferior))
print(paste("El límite superior =", limiteSuperior))
print(boxplot(credit$V2,plot=FALSE).stats[1])
Q1=quantile(credit$V2,0.25)
Q3=quantile(credit$V2,0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
print(paste("El límite inferior =", limiteInferior))
print(paste("El límite superior =", limiteSuperior))
print(boxplot(credit$V2, plot=FALSE)$stats[1])
Q1=quantile(credit$V2,0.25)
Q3=quantile(credit$V2,0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
print(paste("El límite inferior =", limiteInferior))
print(paste("El límite superior =", limiteSuperior))
print(paste("El límite inferior calculado por el boxplot = ")boxplot(credit$V2, plot=FALSE)$stats[1])
Q1=quantile(credit$V2,0.25)
Q3=quantile(credit$V2,0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
print(paste("El límite inferior =", limiteInferior))
print(paste("El límite superior =", limiteSuperior))
print(paste("El límite inferior calculado por el boxplot = "),boxplot(credit$V2, plot=FALSE)$stats[1])
Q1=quantile(credit$V2,0.25)
Q3=quantile(credit$V2,0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
print(paste("El límite inferior =", limiteInferior))
print(paste("El límite superior =", limiteSuperior))
print(paste("El límite inferior calculado por el boxplot = ",boxplot(credit$V2, plot=FALSE)$stats[1]))
summary(credit$V2)
Q1=quantile(credit$V3,0.25)
Q3=quantile(credit$V3,0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
print(paste("El límite inferior =", limiteInferior))
print(paste("El límite superior =", limiteSuperior))
print(paste("El límite inferior calculado por el boxplot = ",boxplot(credit$V3, plot=FALSE)$stats[1]))
summary(credit)
Q1=quantile(credit$V8,0.25)
Q3=quantile(credit$V8,0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
print(paste("El límite inferior =", limiteInferior))
print(paste("El límite superior =", limiteSuperior))
print(paste("El límite inferior calculado por el boxplot = ",boxplot(credit$V8, plot=FALSE)$stats[1]))
Q1=quantile(credit$V11,0.25)
Q3=quantile(credit$V11,0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
print(paste("El límite inferior =", limiteInferior))
print(paste("El límite superior =", limiteSuperior))
print(paste("El límite inferior calculado por el boxplot = ",boxplot(credit$V11, plot=FALSE)$stats[1]))
Q1=quantile(credit$V14,0.25)
Q3=quantile(credit$V14,0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
print(paste("El límite inferior =", limiteInferior))
print(paste("El límite superior =", limiteSuperior))
print(paste("El límite inferior calculado por el boxplot = ",boxplot(credit$V14, plot=FALSE)$stats[1]))
Q1=quantile(credit$V15,0.25)
Q3=quantile(credit$V15,0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
print(paste("El límite inferior =", limiteInferior))
print(paste("El límite superior =", limiteSuperior))
print(paste("El límite inferior calculado por el boxplot = ",boxplot(credit$V15, plot=FALSE)$stats[1]))
Q1=quantile(credit$V2,0.25)
Q3=quantile(credit$V2,0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
credit$V2[credit$V2<limiteInferior | credit$V2>limiteSuperior]
print(paste("El límite inferior =", limiteInferior))
print(paste("El límite superior =", limiteSuperior))
print(paste("El límite inferior calculado por el boxplot = ",boxplot(credit$V2, plot=FALSE)$stats[1]))
credit$V2[credit$V2<limiteInferior | credit$V2>limiteSuperior]
boxplot(credit$v2,plot=FALSE)
boxplot(credit$V2,plot=FALSE)
100*length(credit$V2[credit$V2<limiteInferior | credit$V2>limiteSuperior] )
Q1=quantile(credit$V2,0.25)
Q3=quantile(credit$V2,0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
credit$V2[credit$V2<limiteInferior | credit$V2>limiteSuperior]
100*length(credit$V2[credit$V2<limiteInferior | credit$V2>limiteSuperior])/length((credit$V2))
print(paste("El límite inferior =", limiteInferior))
print(paste("El límite superior =", limiteSuperior))
print(paste("El límite inferior calculado por el boxplot = ",boxplot(credit$V2, plot=FALSE)$stats[1]))
Q1=quantile(credit$V2,0.25)
Q3=quantile(credit$V2,0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
credit$V2[credit$V2<limiteInferior | credit$V2>limiteSuperior]
percAtipicos=100*length(credit$V2[credit$V2<limiteInferior | credit$V2>limiteSuperior])/length((credit$V2))
print(paste("El límite inferior =", limiteInferior))
print(paste("El límite superior =", limiteSuperior))
print(paste("El límite inferior calculado por el boxplot = ",boxplot(credit$V2, plot=FALSE)$stats[1]))
print(paste("El porcentaje de datos atípicos es = ",percAtipicos))
Q1=quantile(credit$V3,0.25)
Q3=quantile(credit$V3,0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
atipicosv3=credit$V3[credit$V3<limiteInferior | credit$V3>limiteSuperior]
percAtipicos=100*length(atipicosv3)/length((credit$V3))
print(paste("El límite inferior =", limiteInferior))
print(paste("El límite superior =", limiteSuperior))
print(paste("El límite inferior calculado por el boxplot = ",boxplot(credit$V3, plot=FALSE)$stats[1]))
print(paste("El porcentaje de datos atípicos es = ",percAtipicos))
Q1=quantile(credit$V8,0.25)
Q3=quantile(credit$V8,0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
atipicosv8=credit$V8[credit$V8<limiteInferior | credit$V8>limiteSuperior]
percAtipicos=100*length(atipicosv8)/length((credit$V8))
print(paste("El límite inferior =", limiteInferior))
print(paste("El límite superior =", limiteSuperior))
print(paste("El límite inferior calculado por el boxplot = ",boxplot(credit$V8, plot=FALSE)$stats[1]))
print(paste("El porcentaje de datos atípicos es = ",percAtipicos))
Q1=quantile(credit$V11,0.25)
Q3=quantile(credit$V11,0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
atipicosv11=credit$V11[credit$V11<limiteInferior | credit$V11>limiteSuperior]
percAtipicos=100*length(atipicosv11)/length((credit$V11))
print(paste("El límite inferior =", limiteInferior))
print(paste("El límite superior =", limiteSuperior))
print(paste("El límite inferior calculado por el boxplot = ",boxplot(credit$V11, plot=FALSE)$stats[1]))
print(paste("El porcentaje de datos atípicos es = ",percAtipicos))
Q1=quantile(credit$V14,0.25)
Q3=quantile(credit$V14,0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
atipicosv14=credit$V14[credit$V14<limiteInferior | credit$V14>limiteSuperior]
percAtipicos=100*length(atipicosv14)/length((credit$V14))
print(paste("El límite inferior =", limiteInferior))
print(paste("El límite superior =", limiteSuperior))
print(paste("El límite inferior calculado por el boxplot = ",boxplot(credit$V14, plot=FALSE)$stats[1]))
print(paste("El porcentaje de datos atípicos es = ",percAtipicos))
Q1=quantile(credit$V15,0.25)
Q3=quantile(credit$V15,0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
atipicosv54=credit$V15[credit$V15<limiteInferior | credit$V15>limiteSuperior]
percAtipicos=100*length(atipicosv15)/length((credit$V15))
Q1=quantile(credit$V15,0.25)
Q3=quantile(credit$V15,0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
atipicosv15=credit$V15[credit$V15<limiteInferior | credit$V15>limiteSuperior]
percAtipicos=100*length(atipicosv15)/length((credit$V15))
print(paste("El límite inferior =", limiteInferior))
print(paste("El límite superior =", limiteSuperior))
print(paste("El límite inferior calculado por el boxplot = ",boxplot(credit$V15, plot=FALSE)$stats[1]))
print(paste("El porcentaje de datos atípicos es = ",percAtipicos))
credit = read.table("crx.data", sep = ",", na.strings ="?")
credit.trainIdx<-readRDS("credit.trainIdx")
#credit.Datos.Train<-credit[credit.trainIdx,]
#credit.Datos.Test<-credit[-credit.trainIdx,]
summary(credit)
numeric_data <- credit_data[, c("V2", "V3", "V8", "V11", "V14", "V15")]
numeric_data <- credit[, c("V2", "V3", "V8", "V11", "V14", "V15")]
# Instalar y cargar GGally si no está instalado
if (!require(GGally)) install.packages("GGally")
library(GGally)
# Generar el gráfico de pares
ggpairs(numeric_data, title = "Relación entre atributos en el análisis de crédito (incluyendo V15)")
numeric_data <- credit[, c("V2", "V3", "V8", "V11", "V14", "V15")]
if (!require(GGally)) install.packages("GGally")
library(GGally)
ggpairs(numeric_data, title = "Relación entre atributos en el análisis de la BBDD credit")
numeric_data <- credit[, c("V2", "V3", "V8", "V11", "V14", "V15")]
if (!require(GGally)) install.packages("GGally")
library(GGally)
ggpairs(numeric_data, title = "Relación entre atributos en el análisis de la BBDD credit")
credit = read.table("crx.data", sep = ",", na.strings ="?")
credit.trainIdx<-readRDS("credit.trainIdx")
#credit.Datos.Train<-credit[credit.trainIdx,]
#credit.Datos.Test<-credit[-credit.trainIdx,]
str(credit)
credit = na.omit(credit)
credit["V1"] = lapply(credit["V1"], FUN = as.factor)
credit["V2"] = lapply(credit["V2"], FUN = as.numeric)
credit["V3"] = lapply(credit["V3"], FUN = as.numeric)
credit["V4"] = lapply(credit["V4"], FUN = as.factor)
credit["V5"] = lapply(credit["V5"], FUN = as.factor)
credit["V6"] = lapply(credit["V6"], FUN = as.factor)
credit["V7"] = lapply(credit["V7"], FUN = as.factor)
credit["V8"] = lapply(credit["V8"], FUN = as.numeric)
credit["V9"] = lapply(credit["V9"], FUN = as.factor)
credit["V10"] = lapply(credit["V10"], FUN = as.factor)
credit["V11"] = lapply(credit["V11"], FUN = as.numeric)
credit["V12"] = lapply(credit["V12"], FUN = as.factor)
credit["V13"] = lapply(credit["V13"], FUN = as.factor)
credit["V14"] = lapply(credit["V14"], FUN = as.numeric)
credit["V15"] = lapply(credit["V15"], FUN = as.numeric)
credit["V16"] = lapply(credit["V16"], FUN = as.factor)
str(credit)
levels(credit$V4)<-c(levels(credit$V4),"t")
str(credit$V4)
str(credit)
summary(credit)
str(credit)
summary(credit$V2)
library(ggplot2)
myhist = ggplot(data=credit,aes(V2)) +
geom_histogram(col="orange",fill="orange",alpha=0.2) +
labs(title="Histograma para V2", y="Count")
myhist = myhist + geom_vline(xintercept = mean(credit$V2),
col="blue",linetype="dashed")
myhist = myhist + geom_vline(xintercept = median(credit$V2),
col="red",linetype="dashed")
myhist
myplot = ggplot(data=credit,aes(sample=V2)) +
ggtitle("QQ plot para V2") +
geom_qq() +
stat_qq_line() +
xlab("Distribución teórica") + ylab("Distribución muestral")
myplot
myhist=ggplot(data=credit, aes(x = V3)) +
geom_histogram(col = "orange", fill = "orange", alpha = 0.2,
breaks = seq(0, 30, by = 1)) +
labs(title = "Histograma para el análisis de la variable V3", y = "Count")
# Marca el valor de la media con una línea azul vertical
myhist <- myhist + geom_vline(xintercept = mean(credit$V3),
col = "blue", linetype = "dashed")
# Marca el valor de la mediana con una línea roja vertical
myhist <- myhist + geom_vline(xintercept = median(credit$V3),
col = "red", linetype = "dashed")
myhist
ggplot(credit, aes(sample = V3)) +
stat_qq() +
stat_qq_line(color = "blue", linetype = "dashed") +
labs(title = "Diagrama Q-Q de V3", x = "Cuantiles Teóricos", y = "Cuantiles Muestrales")
summary(credit$V8)
myhist = ggplot(data=credit, aes(x = V8)) +
geom_histogram(col="orange", fill="orange", alpha=0.2,
breaks=seq(0, 30, by=1)) +
labs(title="Histograma para el análisis de la variable V8", y="Count")
# Marca el valor de la media con una línea azul vertical
myhist = myhist + geom_vline(xintercept = mean(credit$V8),
col="blue", linetype="dashed")
# Marca el valor de la mediana con una línea roja vertical
myhist = myhist + geom_vline(xintercept = median(credit$V8),
col="red", linetype="dashed")
# Mostrar el histograma
myhist
ggplot(data = credit, aes(sample = V8)) +
ggtitle("QQ plot para variable V8") +
stat_qq() +
stat_qq_line() +
xlab("Distribución teórica") +
ylab("Distribución muestral")
numeric_data <- credit[, c("V2", "V3", "V8", "V11", "V14", "V15")]
if (!require(GGally)) install.packages("GGally")
library(GGally)
ggpairs(numeric_data, title = "Relación entre atributos en el análisis de la BBDD credit")
numeric_data <- credit[, c("V2", "V3", "V8", "V11", "V14", "V15")]
if (!require(GGally)) install.packages("GGally")
library(GGally)
ggpairs(numeric_data, title = "Relación entre atributos en el análisis de la BBDD credit")
numeric_data <- credit[, c("V2", "V3", "V8", "V11", "V14", "V15", "V16")]
if (!require(GGally)) install.packages("GGally")
library(GGally)
# Generar el gráfico de pares con colores según la columna V16
ggpairs(numeric_data, aes(color = V16), title = "Relación entre atributos en el análisis de la BBDD credit")
numeric_data <- credit[, c("V2", "V3", "V8", "V11", "V14", "V15", "V16")]
# Asegurarse de que V16 sea una variable categórica
credit$V16 <- as.factor(credit$V16)
# Instalar y cargar GGally si no está instalado
if (!require(GGally)) install.packages("GGally")
library(GGally)
# Generar el gráfico de pares con colores según la columna V16
ggpairs(numeric_data, aes(color = V16), title = "Relación entre atributos en el análisis de la BBDD credit")
