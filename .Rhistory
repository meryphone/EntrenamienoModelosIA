knitr::opts_chunk$set(echo = TRUE)
DNI = sample(1000000:99999999,50)
edad = sample(20:60,25)
mod= DNI%%edad
cbind(DNI,edad,mod)
mode(edad)
knitr::opts_chunk$set(echo = TRUE)
#Representamos histograma de longitud del sepalo
myhist = ggplot(data=iris,aes(Sepal.Length)) +
geom_histogram(col="orange",fill="orange",alpha=0.2,
breaks=seq(4, 8, by=0.5),) +
labs(title="Histograma para la longitud del sépalo", y="Count")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
means = apply(iris[1:4],2,mean) # apply(rango, 1 = aplica a filas, 2 = aplica a columnas, funcion a aplicar)
means
library(ggplot2)
#Generamos los datos necesarios para plotear
plotdata = data.frame(values=as.numeric(means),types=names(means))
#Ploteamos
ggplot(data=plotdata, aes(x=types,y=values,fill=types)) +
geom_col() +
#Añadimos detalles al plot como el título y una etiqueta para el eje y
ggtitle("Valores medios de atributos numéricos") +
ylab("mean values")
aggregate(. ~ Species,data = iris, FUN = min) # Agrupamos la base de datos iris según las especies y aplicamos a todas las variables(.) el mínimo.
apply(iris[iris$Species=="setosa",1:4],2,min)
aggregate(. ~ Species,data = iris, FUN = max) # Lo mismo pero aplicando el máximo a cada columna.
apply(iris[iris$Species=="setosa",1:4],2,min)
aggregate(. ~ Species, data = iris, FUN = min)
iris
knitr::opts_chunk$set(echo = TRUE)
credit = read.table("crx.data", sep = ",")
credit.trainIdx<-readRDS("credit.trainIdx")
credit.Datos.Train<-credit[credit.trainIdx,]
credit.Datos.Test<-credit[-credit.trainIdx,]
str(credit.Datos.Train)
View(credit.Datos.Train)
head(str(credit.Datos.Train))
breast <- read.table(paste("https://archive.ics.uci.edu/ml/",
"machine-learning-databases/breast-cancer-wisconsin/",
"breast-cancer-wisconsin.data", sep=""),
sep=",",header=F)
head(breast)
str(breast)
breast <- data.frame(lapply(breast,FUN=as.factor))
str(breast)
knitr::opts_chunk$set(echo = TRUE)
credit = read.table("crx.data", sep = ",")
credit = read.table("crx.data", sep = ",")
setwd("~/Escritorio/AC")
credit = read.table("crx.data", sep = ",")
setwd("~/Escritorio/AC/ProyectoAC")
credit = read.table("crx.data", sep = ",")
credit = read.table("crx.data", sep = ",")
credit = read.table("crx.data", sep = ",")
knitr::opts_chunk$set(echo = TRUE)
credit = read.table("crx.data", sep = ",")
credit.trainIdx<-readRDS("credit.trainIdx")
credit.Datos.Train<-credit[credit.trainIdx,]
credit.Datos.Test<-credit[-credit.trainIdx,]
head(str(credit.Datos.Train))
knitr::opts_chunk$set(echo = TRUE)
str(credit.Datos.Train)
str(credit.Datos.Train)
lapply(credit.Datos.Train["V2", ], FUN = as.numeric)
str(credit.Datos.Train)
lapply(credit.Datos.Train["V2"], FUN = as.numeric)
str(credit.Datos.Train)
lapply(credit.Datos.Train["V2"], FUN = as.numeric)
str(credit.Datos.Train)
str(credit.Datos.Train)
credit.Datos.Train["V2"] = lapply(credit.Datos.Train["V2"], FUN = as.numeric)
str(credit.Datos.Train)
credit.Datos.Train["V1"] = lapply(credit.Datos.Train["V1"], FUN = as.factor)
str(credit.Datos.Train)
credit = na.omit(credit)
levels(credr)
levels(credit$V1)
View(credit)
credit["V1"] = lapply(credit["V2"], FUN = as.factor)
str(credit)
credit = na.omit(credit)
credit["V1"] = lapply(credit["V1"], FUN = as.factor)
credit["V2"] = lapply(credit["V2"], FUN = as.numeric)
str(credit.Datos.Train)
credit = na.omit(credit)
credit["V1"] = lapply(credit["V1"], FUN = as.factor)
credit["V2"] = lapply(credit["V2"], FUN = as.numeric)
str(credit)
credit = read.table("crx.data", sep = ",")
credit.trainIdx<-readRDS("credit.trainIdx")
#credit.Datos.Train<-credit[credit.trainIdx,]
#credit.Datos.Test<-credit[-credit.trainIdx,]
credit = na.omit(credit)
credit["V1"] = lapply(credit["V1"], FUN = as.factor)
credit["V2"] = lapply(credit["V2"], FUN = as.numeric)
str(credit)
credit[credit == "?"] = NA
credir = na.omit(credit)
str(credit)
credit = na.omit(credit)
credit["V1"] = lapply(credit["V1"], FUN = as.factor)
credit["V2"] = lapply(credit["V2"], FUN = as.numeric)
credit["V3"] = lapply(credit["V3"], FUN = as.numeric)
credit["V4"] = lapply(credit["V4"], FUN = as.factor)
credit["V5"] = lapply(credit["V5"], FUN = as.factor)
credit["V6"] = lapply(credit["V6"], FUN = as.factor)
credit["V7"] = lapply(credit["V7"], FUN = as.factor)
credit["V8"] = lapply(credit["V8"], FUN = as.numeric)
credit["V9"] = lapply(credit["9"], FUN = as.factor)
credit = na.omit(credit)
credit["V1"] = lapply(credit["V1"], FUN = as.factor)
credit["V2"] = lapply(credit["V2"], FUN = as.numeric)
credit["V3"] = lapply(credit["V3"], FUN = as.numeric)
credit["V4"] = lapply(credit["V4"], FUN = as.factor)
credit["V5"] = lapply(credit["V5"], FUN = as.factor)
credit["V6"] = lapply(credit["V6"], FUN = as.factor)
credit["V7"] = lapply(credit["V7"], FUN = as.factor)
credit["V8"] = lapply(credit["V8"], FUN = as.numeric)
credit["V9"] = lapply(credit["V9"], FUN = as.factor)
credit["V10"] = lapply(credit["10"], FUN = as.factor)
credit = na.omit(credit)
credit["V1"] = lapply(credit["V1"], FUN = as.factor)
credit["V2"] = lapply(credit["V2"], FUN = as.numeric)
credit["V3"] = lapply(credit["V3"], FUN = as.numeric)
credit["V4"] = lapply(credit["V4"], FUN = as.factor)
credit["V5"] = lapply(credit["V5"], FUN = as.factor)
credit["V6"] = lapply(credit["V6"], FUN = as.factor)
credit["V7"] = lapply(credit["V7"], FUN = as.factor)
credit["V8"] = lapply(credit["V8"], FUN = as.numeric)
credit["V9"] = lapply(credit["V9"], FUN = as.factor)
credit["V10"] = lapply(credit["V10"], FUN = as.factor)
credit["V11"] = lapply(credit["V11"], FUN = as.numeric)
credit["V12"] = lapply(credit["V12"], FUN = as.factor)
credit["V13"] = lapply(credit["V13"], FUN = as.factor)
credit["V14"] = lapply(credit["V14"], FUN = as.numeric)
credit["V15"] = lapply(credit["V15"], FUN = as.numeric)
credit["V16"] = lapply(credit["V16"], FUN = as.factor)
credit[credit == "?"] = NA
credir = na.omit(credit)
credit[credit == "?"] = NA
credit = na.omit(credit)
str(credit)
credit = filter(Negate(is.null),credit)
credit = read.table("crx.data", sep = ",", na.strings ="?")
credit.trainIdx<-readRDS("credit.trainIdx")
#credit.Datos.Train<-credit[credit.trainIdx,]
#credit.Datos.Test<-credit[-credit.trainIdx,]
nrow(credit.Datos.Train)
str(credit)
credit = na.omit(credit)
credit["V1"] = lapply(credit["V1"], FUN = as.factor)
credit["V2"] = lapply(credit["V2"], FUN = as.numeric)
credit["V3"] = lapply(credit["V3"], FUN = as.numeric)
credit["V4"] = lapply(credit["V4"], FUN = as.factor)
credit["V5"] = lapply(credit["V5"], FUN = as.factor)
credit["V6"] = lapply(credit["V6"], FUN = as.factor)
credit["V7"] = lapply(credit["V7"], FUN = as.factor)
credit["V8"] = lapply(credit["V8"], FUN = as.numeric)
credit["V9"] = lapply(credit["V9"], FUN = as.factor)
credit["V10"] = lapply(credit["V10"], FUN = as.factor)
credit["V11"] = lapply(credit["V11"], FUN = as.numeric)
credit["V12"] = lapply(credit["V12"], FUN = as.factor)
credit["V13"] = lapply(credit["V13"], FUN = as.factor)
credit["V14"] = lapply(credit["V14"], FUN = as.numeric)
credit["V15"] = lapply(credit["V15"], FUN = as.numeric)
credit["V16"] = lapply(credit["V16"], FUN = as.factor)
str(credit)
levels(credit$V4)<-c(levels(credit$V4),"t")
str(breast$V10)
levels(credit$V4)<-c(levels(credit$V4),"t")
str(credit$V4)
str(credit)
View(credit)
levels(credit$V6)
summary(credit)
str(credit)
summary(credit$V2)
myhist = ggplot(data=credit,aes(V2)) +
geom_histogram(col="blue",fill="orange",alpha=0.2) +
labs(title="Histograma para V2", y="Count")
myhist = ggplot(data=credit,aes(V2)) +
geom_histogram(col="blue",fill="orange",alpha=0.2) +
labs(title="Histograma para V2", y="Count")
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
myhist = ggplot(data=credit,aes(V2)) +
geom_histogram(col="blue",fill="orange",alpha=0.2) +
labs(title="Histograma para V2", y="Count")
library(ggplot2)
install.packages("ggplot2")
install.packages("ggplot2")
myhist = ggplot(data=credit,aes(V2)) +
geom_histogram(col="blue",fill="orange",alpha=0.2) +
labs(title="Histograma para V2", y="Count")
#Marca el valor de la media con una línea azul vertical
myhist = myhist + geom_vline(xintercept = mean(V2),
col="blue")
myhist = ggplot(data=credit,aes(V2)) +
geom_histogram(col="blue",fill="orange",alpha=0.2) +
labs(title="Histograma para V2", y="Count")
#Marca el valor de la media con una línea azul vertical
myhist = myhist + geom_vline(xintercept = mean(credit$V2),
col="blue")
#Marca el valor de la mediana con una línea roja
myhist = myhist + geom_vline(xintercept = median(credit$V2),
col="red")
#Esta línea negra marca una frontera ad hoc para dos
#distribuciones de probabilidad distintas
myhist = myhist + geom_vline(xintercept = 2.3,
col="black")
myhist
mybox = ggplot(data=credit, aes(V2)) +
geom_boxplot(alpha=0.6) +
scale_fill_discrete() +
scale_color_discrete() +
ggtitle("Diagrama de caja") +
ylab("Values") +
xlab("Values")
mybox
myplot = ggplot(data=iris,aes(sample=V2)) +
ggtitle("QQ plot para V2") +
geom_qq() +
stat_qq_line() +
xlab("Distribución teórica") + ylab("Distribución muestral")
my plot()
myplot = ggplot(data=iris,aes(sample=V2)) +
ggtitle("QQ plot para V2") +
geom_qq() +
stat_qq_line() +
xlab("Distribución teórica") + ylab("Distribución muestral")
my plot
myplot = ggplot(data=iris,aes(sample=V2)) +
ggtitle("QQ plot para V2") +
geom_qq() +
stat_qq_line() +
xlab("Distribución teórica") + ylab("Distribución muestral")
myplot
myplot = ggplot(data=credit,aes(sample=V2)) +
ggtitle("QQ plot para V2") +
geom_qq() +
stat_qq_line() +
xlab("Distribución teórica") + ylab("Distribución muestral")
myplot
myhist = ggplot(data=credit,aes(V2)) +
geom_histogram(col="blue",fill="orange",alpha=0.2) +
labs(title="Histograma para V2", y="Count")
#Marca el valor de la media con una línea azul vertical
myhist = myhist + geom_vline(xintercept = mean(credit$V2),
col="blue")
#Marca el valor de la mediana con una línea roja
myhist = myhist + geom_vline(xintercept = median(credit$V2),
col="red")
#Esta línea negra marca una frontera ad hoc para dos
#distribuciones de probabilidad distintas
myhist = myhist + geom_vline(xintercept = 2.3,
col="black")
myhist
hist(credit$V3,
main = "Histograma de V3",
xlab = "Valores de V3",
ylab = "Frecuencia",
col = "lightblue",
border = "black")
myhist=ggplot(data=credit, aes(x = V3)) +
geom_histogram(col = "orange", fill = "orange", alpha = 0.2,
breaks = seq(0, 30, by = 1)) +
labs(title = "Histograma para el análisis de la variable V3", y = "Count")
# Marca el valor de la media con una línea azul vertical
myhist <- myhist + geom_vline(xintercept = mean(credit$V3),
col = "blue", linetype = "dashed", size = 1)
# Marca el valor de la mediana con una línea roja vertical
myhist <- myhist + geom_vline(xintercept = median(credit$V3),
col = "red", linetype = "dashed", size = 1)
ggplot(credit, aes(sample = V3)) +
stat_qq() +
stat_qq_line(color = "blue", linetype = "dashed") +
labs(title = "Diagrama Q-Q de V3", x = "Cuantiles Teóricos", y = "Cuantiles Muestrales")
myhisto = ggplot(data=credit, aes(x = V8)) +
geom_histogram(col="orange", fill="orange", alpha=0.2,
breaks=seq(0, 30, by=1)) +
labs(title="Histograma para el análisis de la variable V8", y="Count")
# Marca el valor de la media con una línea azul vertical
myhist = myhist + geom_vline(xintercept = mean(credit$V8),
col="blue", linetype="dashed", size=1)
# Marca el valor de la mediana con una línea roja vertical
myhist = myhist + geom_vline(xintercept = median(credit$V8),
col="red", linetype="dashed", size=1)
# Mostrar el histograma
myhist
myhist = ggplot(data=credit, aes(x = V8)) +
geom_histogram(col="orange", fill="orange", alpha=0.2,
breaks=seq(0, 30, by=1)) +
labs(title="Histograma para el análisis de la variable V8", y="Count")
# Marca el valor de la media con una línea azul vertical
myhist = myhist + geom_vline(xintercept = mean(credit$V8),
col="blue", linetype="dashed", size=1)
# Marca el valor de la mediana con una línea roja vertical
myhist = myhist + geom_vline(xintercept = median(credit$V8),
col="red", linetype="dashed", size=1)
# Mostrar el histograma
myhist
myhist = ggplot(data=credit, aes(x = V8)) +
geom_histogram(col="orange", fill="orange", alpha=0.2,
breaks=seq(0, 30, by=1)) +
labs(title="Histograma para el análisis de la variable V8", y="Count")
# Marca el valor de la media con una línea azul vertical
myhist = myhist + geom_vline(xintercept = mean(credit$V8),
col="blue", size=1)
# Marca el valor de la mediana con una línea roja vertical
myhist = myhist + geom_vline(xintercept = median(credit$V8),
col="red", size=1)
# Mostrar el histograma
myhist
myhist = ggplot(data=credit, aes(x = V8)) +
geom_histogram(col="orange", fill="orange", alpha=0.2,
breaks=seq(0, 30, by=1)) +
labs(title="Histograma para el análisis de la variable V8", y="Count")
# Marca el valor de la media con una línea azul vertical
myhist = myhist + geom_vline(xintercept = mean(credit$V8),
col="blue", linetype=, size=1)
myhist = ggplot(data=credit, aes(x = V8)) +
geom_histogram(col="orange", fill="orange", alpha=0.2,
breaks=seq(0, 30, by=1)) +
labs(title="Histograma para el análisis de la variable V8", y="Count")
# Marca el valor de la media con una línea azul vertical
myhist = myhist + geom_vline(xintercept = mean(credit$V8),
col="blue", linetype="dashed", size=1)
# Marca el valor de la mediana con una línea roja vertical
myhist = myhist + geom_vline(xintercept = median(credit$V8),
col="red", linetype="dashed", size=1)
# Mostrar el histograma
myhist
library(ggplot2)
myhist = ggplot(data=credit,aes(V2)) +
geom_histogram(col="blue",fill="orange",alpha=0.2) +
labs(title="Histograma para V2", y="Count")
#Marca el valor de la media con una línea azul vertical
myhist = myhist + geom_vline(xintercept = mean(credit$V2),
col="blue")
#Marca el valor de la mediana con una línea roja
myhist = myhist + geom_vline(xintercept = median(credit$V2),
col="red",linetype="dashed")
#Esta línea negra marca una frontera ad hoc para dos
#distribuciones de probabilidad distintas
myhist = myhist + geom_vline(xintercept = 2.3,
col="black",linetype="dashed")
myhist
library(ggplot2)
myhist = ggplot(data=credit,aes(V2)) +
geom_histogram(col="blue",fill="orange",alpha=0.2) +
labs(title="Histograma para V2", y="Count")
#Marca el valor de la media con una línea azul vertical
myhist = myhist + geom_vline(xintercept = mean(credit$V2),
col="blue",linetype="dashed")
#Marca el valor de la mediana con una línea roja
myhist = myhist + geom_vline(xintercept = median(credit$V2),
col="red",linetype="dashed")
#Esta línea negra marca una frontera ad hoc para dos
#distribuciones de probabilidad distintas
myhist = myhist + geom_vline(xintercept = 2.3,
col="black",linetype="dashed")
myhist
library(ggplot2)
myhist = ggplot(data=credit,aes(V2)) +
geom_histogram(col="orange",fill="orange",alpha=0.2) +
labs(title="Histograma para V2", y="Count")
#Marca el valor de la media con una línea azul vertical
myhist = myhist + geom_vline(xintercept = mean(credit$V2),
col="blue",linetype="dashed")
#Marca el valor de la mediana con una línea roja
myhist = myhist + geom_vline(xintercept = median(credit$V2),
col="red",linetype="dashed")
#Esta línea negra marca una frontera ad hoc para dos
#distribuciones de probabilidad distintas
myhist = myhist + geom_vline(xintercept = 2.3,
col="black")
myhist
library(ggplot2)
myhist = ggplot(data=credit,aes(V2)) +
geom_histogram(col="orange",fill="orange",alpha=0.2) +
labs(title="Histograma para V2", y="Count")
myhist = myhist + geom_vline(xintercept = mean(credit$V2),
col="blue",linetype="dashed")
myhist = myhist + geom_vline(xintercept = median(credit$V2),
col="red",linetype="dashed")
myhist
myhist=ggplot(data=credit, aes(x = V3)) +
geom_histogram(col = "orange", fill = "orange", alpha = 0.2,
breaks = seq(0, 30, by = 1)) +
labs(title = "Histograma para el análisis de la variable V3", y = "Count")
# Marca el valor de la media con una línea azul vertical
myhist <- myhist + geom_vline(xintercept = mean(credit$V3),
col = "blue", linetype = "dashed", size = 1)
# Marca el valor de la mediana con una línea roja vertical
myhist <- myhist + geom_vline(xintercept = median(credit$V3),
col = "red", linetype = "dashed", size = 1)
myhist=ggplot(data=credit, aes(x = V3)) +
geom_histogram(col = "orange", fill = "orange", alpha = 0.2,
breaks = seq(0, 30, by = 1)) +
labs(title = "Histograma para el análisis de la variable V3", y = "Count")
# Marca el valor de la media con una línea azul vertical
myhist <- myhist + geom_vline(xintercept = mean(credit$V3),
col = "blue", linetype = "dashed", size = 1)
# Marca el valor de la mediana con una línea roja vertical
myhist <- myhist + geom_vline(xintercept = median(credit$V3),
col = "red", linetype = "dashed", size = 1)
myhist
myhist=ggplot(data=credit, aes(x = V3)) +
geom_histogram(col = "orange", fill = "orange", alpha = 0.2,
breaks = seq(0, 30, by = 1)) +
labs(title = "Histograma para el análisis de la variable V3", y = "Count")
# Marca el valor de la media con una línea azul vertical
myhist <- myhist + geom_vline(xintercept = mean(credit$V3),
col = "blue", linetype = "dashed")
# Marca el valor de la mediana con una línea roja vertical
myhist <- myhist + geom_vline(xintercept = median(credit$V3),
col = "red", linetype = "dashed")
myhist
myhist = ggplot(data=credit, aes(x = V8)) +
geom_histogram(col="orange", fill="orange", alpha=0.2,
breaks=seq(0, 30, by=1)) +
labs(title="Histograma para el análisis de la variable V8", y="Count")
# Marca el valor de la media con una línea azul vertical
myhist = myhist + geom_vline(xintercept = mean(credit$V8),
col="blue", linetype="dashed")
# Marca el valor de la mediana con una línea roja vertical
myhist = myhist + geom_vline(xintercept = median(credit$V8),
col="red", linetype="dashed")
# Mostrar el histograma
myhist
