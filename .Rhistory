labs(title = "Boxplot de V15", y = "V15", x = "") +
theme_minimal()
credit.trainIdx<-readRDS("credit.trainIdx")
credit.Datos.Train<-credit[credit.trainIdx,]
credit.Datos.Test<-credit[-credit.trainIdx,]
nrow(credit.Datos.Train)
credit.Datos.Train <- credit.Datos.Train %>% select(-V1, -V4,-V5, -V9, -V10, -V12)
credit.Datos.Train <- credit.Datos.Train %>% select(-V6, -V7, -V13)
head(credit.Datos.Train)
hist(credit$V2)
hist(credit$V8)
install.packages("robustbase")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(GGally)
library(caret)
library(RANN)
credit = read.table("crx.data", sep = ",",na.strings = "?")
head(credit)
sum(!complete.cases(credit))
credit[!complete.cases(credit),]
credit["V1"] = lapply(credit["V1"], FUN = as.factor)
credit["V2"] = lapply(credit["V2"], FUN = as.numeric)
credit["V3"] = lapply(credit["V3"], FUN = as.numeric)
credit["V4"] = lapply(credit["V4"], FUN = as.factor)
credit["V5"] = lapply(credit["V5"], FUN = as.factor)
credit["V6"] = lapply(credit["V6"], FUN = as.factor)
credit["V7"] = lapply(credit["V7"], FUN = as.factor)
credit["V8"] = lapply(credit["V8"], FUN = as.numeric)
credit["V9"] = lapply(credit["V9"], FUN = as.factor)
credit["V10"] = lapply(credit["V10"], FUN = as.factor)
credit["V11"] = lapply(credit["V11"], FUN = as.numeric)
credit["V12"] = lapply(credit["V12"], FUN = as.factor)
credit["V13"] = lapply(credit["V13"], FUN = as.factor)
credit["V14"] = lapply(credit["V14"], FUN = as.numeric)
credit["V15"] = lapply(credit["V15"], FUN = as.numeric)
credit["V16"] = lapply(credit["V16"], FUN = as.factor)
head(credit)
levels(credit$V4)<-c(levels(credit$V4),"t")
head(credit$V4)
head(credit)
summary(credit)
str(credit)
levels(credit$V1)
prop.table(table(credit$V1))*100
ggplot(credit, aes(x = V2)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Histograma de credit$V2", x = "Valores de V2", y = "Frecuencia") +
theme_minimal()
myhist = ggplot(data=na.omit(credit),aes(V3)) +
geom_histogram(col="orange",fill="orange",alpha=0.2) +
labs(title="Histograma para V3", y="Count")
myhist = myhist + geom_vline(xintercept = mean(credit$V3),
col="blue",linetype="dashed")
myhist = myhist + geom_vline(xintercept = median(credit$V3),
col="red",linetype="dashed")
myhist
levels(credit$V4)
prop.table(table(credit$V4))*100
levels(credit$V5)
prop.table(table(credit$V5))
levels(credit$V6)
prop.table(table(credit$V6))*100
levels(credit$V7)
prop.table(table(credit$V7))*100
ggplot(credit, aes(x = V8)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Histograma de credit$V8", x = "Valores de V8", y = "Frecuencia") +
theme_minimal()
levels(credit$V9)
levels(credit$V10)
prop.table(table(credit$V10))*100
ggplot(credit, aes(x = V11)) +
geom_histogram(bins = 30, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Histograma de la Variable V11", x = "V11(original)", y = "Frecuencia") +
theme_minimal()
levels(credit$V12)
prop.table(table(credit$V12))*100
levels(credit$V13)
ggplot(credit, aes(x = V14)) +
geom_histogram(binwidth = 14, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Histograma de credit$V14", x = "Valores de V14", y = "Frecuencia") +
theme_minimal()
ggplot(credit, aes(x = V15)) +
geom_histogram( fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Histograma de V15", x = "Valores de V15", y = "Frecuencia") +
theme_minimal()
levels(credit$V16)
summary(credit$V2)
myhist = ggplot(data=na.omit(credit),aes(V2)) +
geom_histogram(col="orange",fill="orange",alpha=0.2) +
labs(title="Histograma para V2", y="Count")
myhist = myhist + geom_vline(xintercept = mean(credit$V2),
col="blue",linetype="dashed")
myhist = myhist + geom_vline(xintercept = median(credit$V2),
col="red",linetype="dashed")
myhist
myplot = ggplot(data=na.omit(credit),aes(sample=V2)) +
ggtitle("QQ plot para V2") +
geom_qq() +
stat_qq_line() +
xlab("Distribución teórica") + ylab("Distribución muestral")
myplot
summary(credit$V3)
myhist=ggplot(data=credit, aes(x = V3)) +
geom_histogram(col = "orange", fill = "orange", alpha = 0.2,
breaks = seq(0, 30, by = 1)) +
labs(title = "Histograma para el análisis de la variable V3", y = "Count")
# Marca el valor de la media con una línea azul vertical
myhist <- myhist + geom_vline(xintercept = mean(credit$V3),
col = "blue", linetype = "dashed")
# Marca el valor de la mediana con una línea roja vertical
myhist <- myhist + geom_vline(xintercept = median(credit$V3),
col = "red", linetype = "dashed")
myhist
ggplot(credit, aes(sample = V3)) +
stat_qq() +
stat_qq_line(color = "blue", linetype = "dashed") +
labs(title = "Diagrama Q-Q de V3", x = "Cuantiles Teóricos", y = "Cuantiles Muestrales")
summary(credit$V8)
myhist = ggplot(data=credit, aes(x = V8)) +
geom_histogram(col="orange", fill="orange", alpha=0.2,
breaks=seq(0, 30, by=1)) +
labs(title="Histograma para el análisis de la variable V8", y="Count")
# Marca el valor de la media con una línea azul vertical
myhist = myhist + geom_vline(xintercept = mean(credit$V8),
col="blue", linetype="dashed")
# Marca el valor de la mediana con una línea roja vertical
myhist = myhist + geom_vline(xintercept = median(credit$V8),
col="red", linetype="dashed")
# Mostrar el histograma
myhist
ggplot(data = credit, aes(sample = V8)) +
ggtitle("QQ plot para variable V8") +
stat_qq() +
stat_qq_line() +
xlab("Distribución teórica") +
ylab("Distribución muestral")
# Matriz de dispersión para analizar la relación entre V2, V3, V8 y V16
ggpairs(na.omit(credit), columns = c("V2", "V3", "V8","V14","V15", "V16"),aes(color = V16, alpha = 0.6), title = "Análisis Multivariable de V2 V3 V8 V4 Y V15")
Q1=quantile(na.omit(credit$V2),0.25)
Q3=quantile(na.omit(credit$V2),0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
atipicosv2=na.omit(credit$V2)[na.omit(credit$V2)<limiteInferior | na.omit(credit$V2)>limiteSuperior]
percAtipicos=100*length(atipicosv2)/length((na.omit(credit$V2)))
print(paste("El porcentaje de datos atípicos para V2 es = ",percAtipicos))
Q1=quantile(na.omit(credit$V3),0.25)
Q3=quantile(na.omit(credit$V3),0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
atipicosv3=na.omit(credit$V3)[na.omit(credit$V3)<limiteInferior | na.omit(credit$V3)>limiteSuperior]
percAtipicos=100*length(atipicosv3)/length((na.omit(credit$V3)))
print(paste("El porcentaje de datos atípicos para V3 es = ",percAtipicos))
Q1=quantile(na.omit(credit$V14),0.25)
Q3=quantile(na.omit(credit$V14),0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
atipicosv14=na.omit(credit$V14)[na.omit(credit$V14)<limiteInferior | na.omit(credit$V14)>limiteSuperior]
percAtipicos=100*length(atipicosv14)/length((na.omit(credit$V14)))
print(paste("El porcentaje de datos atípicos para V14 es = ",percAtipicos))
Q1=quantile(na.omit(credit$V8),0.25)
Q3=quantile(na.omit(credit$V8),0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
atipicosv8=na.omit(credit$V8)[na.omit(credit$V8)<limiteInferior | na.omit(credit$V8)>limiteSuperior]
percAtipicos=100*length(atipicosv8)/length((na.omit(credit$V8)))
print(paste("El porcentaje de datos atípicos es = ",percAtipicos))
ggplot(credit, aes(x = V8)) +
geom_histogram(bins = 30, fill = "orange", color = "black", alpha = 0.7) +
labs(title = "Histograma de V8 original", x = "V8 (original)", y = "Frecuencia")
ggplot(credit, aes(y = V8)) +
geom_boxplot(fill = "skyblue", color = "darkblue", outlier.color = "red", outlier.shape = 16) +
labs(title = "Boxplot de V8", y = "V8", x = "") +
theme_minimal()
Q1=quantile(na.omit(credit$V11),0.25)
Q3=quantile(na.omit(credit$V11),0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
atipicosV11=na.omit(credit$V11)[na.omit(credit$V11)<limiteInferior | na.omit(credit$V11)>limiteSuperior]
percAtipicos=100*length(atipicosV11)/length((na.omit(credit$V11)))
print(paste("El porcentaje de datos atípicos es = ",percAtipicos))
ggplot(credit, aes(x = V11)) +
geom_histogram(bins = 30, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Histograma de la Variable V11", x = "V11(original)", y = "Frecuencia") +
theme_minimal()
ggplot(credit, aes(y = V11)) +
geom_boxplot(fill = "skyblue", color = "darkblue", outlier.color = "red", outlier.shape = 16) +
labs(title = "Boxplot de V11", y = "V11", x = "") +
theme_minimal()
Q1=quantile(na.omit(credit$V15),0.25)
Q3=quantile(na.omit(credit$V15),0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
atipicosV15=na.omit(credit$V15)[na.omit(credit$V15)<limiteInferior | na.omit(credit$V15)>limiteSuperior]
percAtipicos=100*length(atipicosV15)/length((na.omit(credit$V15)))
print(paste("El porcentaje de datos atípicos es = ",percAtipicos))
ggplot(credit, aes(x = V15)) +
geom_histogram(bins = 30, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Histograma de la Variable V15", x = "V15", y = "Frecuencia") +
theme_minimal()
ggplot(credit, aes(y = V15)) +
geom_boxplot(fill = "skyblue", color = "darkblue", outlier.color = "red", outlier.shape = 16) +
labs(title = "Boxplot de V15", y = "V15", x = "") +
theme_minimal()
credit.trainIdx<-readRDS("credit.trainIdx")
credit.Datos.Train<-credit[credit.trainIdx,]
credit.Datos.Test<-credit[-credit.trainIdx,]
nrow(credit.Datos.Train)
credit.Datos.Train <- credit.Datos.Train %>% select(-V1, -V4,-V5, -V9, -V10, -V12)
credit.Datos.Train <- credit.Datos.Train %>% select(-V6, -V7, -V13)
head(credit.Datos.Train)
credit.Datos.Test = credit.Datos.Test %>% select(-V1, -V4,-V5, -V6, -V7, -V13, -V9, -V10, -V12)
nrow(credit.Datos.Train[!complete.cases(credit.Datos.Train),])
# Visualización rápida de la matriz de correlación en forma de símbolos
symnum(cor(credit.Datos.Train[, sapply(credit.Datos.Train, is.numeric)], use = "complete.obs"))
preproc <- preProcess(credit.Datos.Train[, sapply(credit.Datos.Train, is.numeric)], method = "medianImpute")
credit_num_imputed <- predict(preproc, credit.Datos.Train[, sapply(credit.Datos.Train, is.numeric)])
# Verificar que no hay valores nulos en el nuevo dataframe
sum(is.na(credit_num_imputed))
credit.Datos.Train[, sapply(credit.Datos.Train, is.numeric)] <- credit_num_imputed
imputar_moda <- function(x) {
if (is.factor(x) || is.character(x)) {
# Calcular la moda (valor más frecuente)
moda <- names(sort(table(x), decreasing = TRUE))[1]
# Reemplazar los NA con la moda
x[is.na(x)] <- moda
}
return(x)
}
credit.Datos.Train <- data.frame(lapply(credit.Datos.Train, imputar_moda))
#Comprobar que todo ha ido bien
nrow(credit.Datos.Train[!complete.cases(credit.Datos.Train),])
credit.Datos.Train[!complete.cases(credit.Datos.Train),]
nearZeroVar(credit.Datos.Train)
symnum(cor(credit.Datos.Train[, sapply(credit.Datos.Train, is.numeric)]))
# Aplicar preProcess para centrar en la mediana y escalar por el RIC
preproc <- preProcess(credit.Datos.Train[, c("V8", "V11", "V15")], method = c("center", "scale"),
center = apply(credit.Datos.Train[, c("V8", "V11", "V15")], 2, median),
scale = apply(credit.Datos.Train[, c("V8", "V11", "V15")], 2, IQR))
credit.Datos.Train[, c("V8", "V11", "V15")] <- predict(preproc, credit.Datos.Train[, c("v8", "v11", "v15")])
# Aplicar preProcess para centrar en la mediana y escalar por el RIC
preproc <- preProcess(credit.Datos.Train[, c("V8", "V11", "V15")], method = c("center", "scale"),
center = apply(credit.Datos.Train[, c("V8", "V11", "V15")], 2, median),
scale = apply(credit.Datos.Train[, c("V8", "V11", "V15")], 2, IQR))
credit.Datos.Train[, c("V8", "V11", "V15")] <- predict(preproc, credit.Datos.Train[, c("V8", "V11", "V15")])
# Verificar los resultados
head(credit.Datos.Train[, c("V8", "V11", "V15")])
hist(credit$V14)
hist(credit$V2)
hist(credit$V3)
hist(credit$V3)
hist(credit$V2)
hist(credit$V2)
hist(credit$V3)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(GGally)
library(caret)
library(RANN)
credit = read.table("crx.data", sep = ",",na.strings = "?")
head(credit)
sum(!complete.cases(credit))
credit[!complete.cases(credit),]
credit["V1"] = lapply(credit["V1"], FUN = as.factor)
credit["V2"] = lapply(credit["V2"], FUN = as.numeric)
credit["V3"] = lapply(credit["V3"], FUN = as.numeric)
credit["V4"] = lapply(credit["V4"], FUN = as.factor)
credit["V5"] = lapply(credit["V5"], FUN = as.factor)
credit["V6"] = lapply(credit["V6"], FUN = as.factor)
credit["V7"] = lapply(credit["V7"], FUN = as.factor)
credit["V8"] = lapply(credit["V8"], FUN = as.numeric)
credit["V9"] = lapply(credit["V9"], FUN = as.factor)
credit["V10"] = lapply(credit["V10"], FUN = as.factor)
credit["V11"] = lapply(credit["V11"], FUN = as.numeric)
credit["V12"] = lapply(credit["V12"], FUN = as.factor)
credit["V13"] = lapply(credit["V13"], FUN = as.factor)
credit["V14"] = lapply(credit["V14"], FUN = as.numeric)
credit["V15"] = lapply(credit["V15"], FUN = as.numeric)
credit["V16"] = lapply(credit["V16"], FUN = as.factor)
head(credit)
levels(credit$V4)<-c(levels(credit$V4),"t")
head(credit$V4)
head(credit)
summary(credit)
str(credit)
levels(credit$V1)
prop.table(table(credit$V1))*100
ggplot(credit, aes(x = V2)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Histograma de credit$V2", x = "Valores de V2", y = "Frecuencia") +
theme_minimal()
myhist = ggplot(data=na.omit(credit),aes(V3)) +
geom_histogram(col="orange",fill="orange",alpha=0.2) +
labs(title="Histograma para V3", y="Count")
myhist = myhist + geom_vline(xintercept = mean(credit$V3),
col="blue",linetype="dashed")
myhist = myhist + geom_vline(xintercept = median(credit$V3),
col="red",linetype="dashed")
myhist
levels(credit$V4)
prop.table(table(credit$V4))*100
levels(credit$V5)
prop.table(table(credit$V5))
levels(credit$V6)
prop.table(table(credit$V6))*100
levels(credit$V7)
prop.table(table(credit$V7))*100
ggplot(credit, aes(x = V8)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Histograma de credit$V8", x = "Valores de V8", y = "Frecuencia") +
theme_minimal()
levels(credit$V9)
levels(credit$V10)
prop.table(table(credit$V10))*100
ggplot(credit, aes(x = V11)) +
geom_histogram(bins = 30, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Histograma de la Variable V11", x = "V11(original)", y = "Frecuencia") +
theme_minimal()
levels(credit$V12)
prop.table(table(credit$V12))*100
levels(credit$V13)
ggplot(credit, aes(x = V14)) +
geom_histogram(binwidth = 14, fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Histograma de credit$V14", x = "Valores de V14", y = "Frecuencia") +
theme_minimal()
ggplot(credit, aes(x = V15)) +
geom_histogram( fill = "blue", color = "black", alpha = 0.7) +
labs(title = "Histograma de V15", x = "Valores de V15", y = "Frecuencia") +
theme_minimal()
levels(credit$V16)
summary(credit$V2)
myhist = ggplot(data=na.omit(credit),aes(V2)) +
geom_histogram(col="orange",fill="orange",alpha=0.2) +
labs(title="Histograma para V2", y="Count")
myhist = myhist + geom_vline(xintercept = mean(credit$V2),
col="blue",linetype="dashed")
myhist = myhist + geom_vline(xintercept = median(credit$V2),
col="red",linetype="dashed")
myhist
myplot = ggplot(data=na.omit(credit),aes(sample=V2)) +
ggtitle("QQ plot para V2") +
geom_qq() +
stat_qq_line() +
xlab("Distribución teórica") + ylab("Distribución muestral")
myplot
summary(credit$V3)
myhist=ggplot(data=credit, aes(x = V3)) +
geom_histogram(col = "orange", fill = "orange", alpha = 0.2,
breaks = seq(0, 30, by = 1)) +
labs(title = "Histograma para el análisis de la variable V3", y = "Count")
# Marca el valor de la media con una línea azul vertical
myhist <- myhist + geom_vline(xintercept = mean(credit$V3),
col = "blue", linetype = "dashed")
# Marca el valor de la mediana con una línea roja vertical
myhist <- myhist + geom_vline(xintercept = median(credit$V3),
col = "red", linetype = "dashed")
myhist
ggplot(credit, aes(sample = V3)) +
stat_qq() +
stat_qq_line(color = "blue", linetype = "dashed") +
labs(title = "Diagrama Q-Q de V3", x = "Cuantiles Teóricos", y = "Cuantiles Muestrales")
summary(credit$V8)
myhist = ggplot(data=credit, aes(x = V8)) +
geom_histogram(col="orange", fill="orange", alpha=0.2,
breaks=seq(0, 30, by=1)) +
labs(title="Histograma para el análisis de la variable V8", y="Count")
# Marca el valor de la media con una línea azul vertical
myhist = myhist + geom_vline(xintercept = mean(credit$V8),
col="blue", linetype="dashed")
# Marca el valor de la mediana con una línea roja vertical
myhist = myhist + geom_vline(xintercept = median(credit$V8),
col="red", linetype="dashed")
# Mostrar el histograma
myhist
ggplot(data = credit, aes(sample = V8)) +
ggtitle("QQ plot para variable V8") +
stat_qq() +
stat_qq_line() +
xlab("Distribución teórica") +
ylab("Distribución muestral")
# Matriz de dispersión para analizar la relación entre V2, V3, V8 y V16
ggpairs(na.omit(credit), columns = c("V2", "V3", "V8","V14","V15", "V16"),aes(color = V16, alpha = 0.6), title = "Análisis Multivariable de V2 V3 V8 V4 Y V15")
Q1=quantile(na.omit(credit$V2),0.25)
Q3=quantile(na.omit(credit$V2),0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
atipicosv2=na.omit(credit$V2)[na.omit(credit$V2)<limiteInferior | na.omit(credit$V2)>limiteSuperior]
percAtipicos=100*length(atipicosv2)/length((na.omit(credit$V2)))
print(paste("El porcentaje de datos atípicos para V2 es = ",percAtipicos))
Q1=quantile(na.omit(credit$V3),0.25)
Q3=quantile(na.omit(credit$V3),0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
atipicosv3=na.omit(credit$V3)[na.omit(credit$V3)<limiteInferior | na.omit(credit$V3)>limiteSuperior]
percAtipicos=100*length(atipicosv3)/length((na.omit(credit$V3)))
print(paste("El porcentaje de datos atípicos para V3 es = ",percAtipicos))
Q1=quantile(na.omit(credit$V14),0.25)
Q3=quantile(na.omit(credit$V14),0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
atipicosv14=na.omit(credit$V14)[na.omit(credit$V14)<limiteInferior | na.omit(credit$V14)>limiteSuperior]
percAtipicos=100*length(atipicosv14)/length((na.omit(credit$V14)))
print(paste("El porcentaje de datos atípicos para V14 es = ",percAtipicos))
Q1=quantile(na.omit(credit$V8),0.25)
Q3=quantile(na.omit(credit$V8),0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
atipicosv8=na.omit(credit$V8)[na.omit(credit$V8)<limiteInferior | na.omit(credit$V8)>limiteSuperior]
percAtipicos=100*length(atipicosv8)/length((na.omit(credit$V8)))
print(paste("El porcentaje de datos atípicos es = ",percAtipicos))
ggplot(credit, aes(x = V8)) +
geom_histogram(bins = 30, fill = "orange", color = "black", alpha = 0.7) +
labs(title = "Histograma de V8 original", x = "V8 (original)", y = "Frecuencia")
ggplot(credit, aes(y = V8)) +
geom_boxplot(fill = "skyblue", color = "darkblue", outlier.color = "red", outlier.shape = 16) +
labs(title = "Boxplot de V8", y = "V8", x = "") +
theme_minimal()
Q1=quantile(na.omit(credit$V11),0.25)
Q3=quantile(na.omit(credit$V11),0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
atipicosV11=na.omit(credit$V11)[na.omit(credit$V11)<limiteInferior | na.omit(credit$V11)>limiteSuperior]
percAtipicos=100*length(atipicosV11)/length((na.omit(credit$V11)))
print(paste("El porcentaje de datos atípicos es = ",percAtipicos))
ggplot(credit, aes(x = V11)) +
geom_histogram(bins = 30, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Histograma de la Variable V11", x = "V11(original)", y = "Frecuencia") +
theme_minimal()
ggplot(credit, aes(y = V11)) +
geom_boxplot(fill = "skyblue", color = "darkblue", outlier.color = "red", outlier.shape = 16) +
labs(title = "Boxplot de V11", y = "V11", x = "") +
theme_minimal()
Q1=quantile(na.omit(credit$V15),0.25)
Q3=quantile(na.omit(credit$V15),0.75)
RIC=Q3-Q1
limiteInferior=Q1-1.5*RIC
limiteSuperior=Q3+1.5*RIC
atipicosV15=na.omit(credit$V15)[na.omit(credit$V15)<limiteInferior | na.omit(credit$V15)>limiteSuperior]
percAtipicos=100*length(atipicosV15)/length((na.omit(credit$V15)))
print(paste("El porcentaje de datos atípicos es = ",percAtipicos))
ggplot(credit, aes(x = V15)) +
geom_histogram(bins = 30, fill = "skyblue", color = "black", alpha = 0.7) +
labs(title = "Histograma de la Variable V15", x = "V15", y = "Frecuencia") +
theme_minimal()
ggplot(credit, aes(y = V15)) +
geom_boxplot(fill = "skyblue", color = "darkblue", outlier.color = "red", outlier.shape = 16) +
labs(title = "Boxplot de V15", y = "V15", x = "") +
theme_minimal()
credit.trainIdx<-readRDS("credit.trainIdx")
credit.Datos.Train<-credit[credit.trainIdx,]
credit.Datos.Test<-credit[-credit.trainIdx,]
nrow(credit.Datos.Train)
credit.Datos.Train <- credit.Datos.Train %>% select(-V1, -V4,-V5, -V9, -V10, -V12)
credit.Datos.Train <- credit.Datos.Train %>% select(-V6, -V7, -V13)
head(credit.Datos.Train)
credit.Datos.Test = credit.Datos.Test %>% select(-V1, -V4,-V5, -V6, -V7, -V13, -V9, -V10, -V12)
nrow(credit.Datos.Train[!complete.cases(credit.Datos.Train),])
# Visualización rápida de la matriz de correlación en forma de símbolos
symnum(cor(credit.Datos.Train[, sapply(credit.Datos.Train, is.numeric)], use = "complete.obs"))
preproc <- preProcess(credit.Datos.Train[, sapply(credit.Datos.Train, is.numeric)], method = "medianImpute")
credit_num_imputed <- predict(preproc, credit.Datos.Train[, sapply(credit.Datos.Train, is.numeric)])
# Verificar que no hay valores nulos en el nuevo dataframe
sum(is.na(credit_num_imputed))
credit.Datos.Train[, sapply(credit.Datos.Train, is.numeric)] <- credit_num_imputed
imputar_moda <- function(x) {
if (is.factor(x) || is.character(x)) {
# Calcular la moda (valor más frecuente)
moda <- names(sort(table(x), decreasing = TRUE))[1]
# Reemplazar los NA con la moda
x[is.na(x)] <- moda
}
return(x)
}
credit.Datos.Train <- data.frame(lapply(credit.Datos.Train, imputar_moda))
#Comprobar que todo ha ido bien
nrow(credit.Datos.Train[!complete.cases(credit.Datos.Train),])
credit.Datos.Train[!complete.cases(credit.Datos.Train),]
nearZeroVar(credit.Datos.Train)
symnum(cor(credit.Datos.Train[, sapply(credit.Datos.Train, is.numeric)]))
# Aplicar preProcess para centrar en la mediana y escalar por el RIC
preproc <- preProcess(credit.Datos.Train[, c("V8", "V11", "V15")], method = c("center", "scale"),
center = apply(credit.Datos.Train[, c("V8", "V11", "V15")], 2, median),
scale = apply(credit.Datos.Train[, c("V8", "V11", "V15")], 2, IQR))
credit.Datos.Train[, c("V8", "V11", "V15")] <- predict(preproc, credit.Datos.Train[, c("V8", "V11", "V15")])
# Verificar los resultados
head(credit.Datos.Train[, c("V8", "V11", "V15")])
credit.Datos.Train$V2=log1p(credit.Datos.Train$V2)
credit.Datos.Train$V3=log1p(credit.Datos.Train$V3)
credit.Datos.Train$V14=log1p(credit.Datos.Train$V14)
credit.Datos.Test$V2=log1p(credit.Datos.Test$V2)
credit.Datos.Test$V3=log1p(credit.Datos.Test$V3)
credit.Datos.Test$V14=log1p(credit.Datos.Test$V14)
#Utilizamos la variable 'prepoc' creada anteriormente con los datos de TRAIN para evitar peaking
credit.Datos.Test[, c("V8", "V11", "V15")] <- predict(preproc, credit.Datos.Test[, c("V8", "V11", "V15")])
View(credit.Datos.Test)
var(credit.Datos.Train$V2)
var(credit.Datos.Train$V3)
var(credit.Datos.Train$V14)
